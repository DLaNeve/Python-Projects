{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import os\
import json\
import time\
from time import strftime, localtime\
import urllib.request\
import turtle\
\
os.getcwd()\
\
url_astros = 'http://api.open-notify.org/astros.json'\
astronautsJSON = urllib.request.urlopen(url_astros)\
astronautsDICT = json.loads(astronautsJSON.read())\
astronautsQty = int(astronautsDICT['number'])\
\
for i in range(astronautsQty):\
    print('Astronaut:',astronautsDICT['people'][i]['name'], 'Spacecraft:', astronautsDICT['people'][i]['craft'])\
\
\
\
screen = turtle.Screen()\
screen.setup(1200, 480)\
screen.setworldcoordinates(-180, -90, 180, 90)\
screen.bgpic('map.gif')\
\
screen.register_shape('Spacestation.gif')\
iss = turtle.Turtle()\
iss.shape('Spacestation.gif')\
iss.shapesize(311, 124)\
iss.setheading(90)\
\
iss.penup()\
\
while True:    \
     # load the current status of the ISS in real-time\
    urlISS = "http://api.open-notify.org/iss-now.json"\
    issData = urllib.request.urlopen(urlISS)\
    result = json.loads(issData.read())\
     # Extract the ISS location\
    issLocation = result["iss_position"]\
    lat = float(issLocation['latitude'])\
    lon = float(issLocation['longitude'])\
    timeInt = int(result['timestamp'])\
    locationTime = strftime('%I:%M:%S %p', localtime(timeInt))\
\
    print('\\nAt ',locationTime,'  The ISS is located at:    ', 'lat:', lat, '    lon:',lon,'\\n\\n')\
    \
    # Update the ISS location on the map\
    iss.goto(lon, lat)  \
     # Refresh each 5 seconds\
    time.sleep(5)\
\
\
\
\
\
\
\
\
\
\
#print("Current number of astronauts in space = ",astronauts['number'])\
\
#url_iss = 'http://api.open-notify.org/iss-now.json'\
#issData = urllib.request.urlopen(url_iss)\
#issLocation = json.loads(issData.read())\
\
#lat = issLocation['iss_position']['latitude']\
#lon = issLocation['iss_position']['longitude']\
#lat = float(lat)\
#lon = float(lon)\
\
#pp(issLocation)\
#timeInt = int(issLocation['timestamp'])\
#locationTime = strftime('%Y-%m-%d %H:%M:%S', localtime(timeInt))\
\
\
}